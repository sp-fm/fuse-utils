[tool]
[tool.poetry]
name = "fuse-utils"
version = "0.1.1"
homepage = "https://github.com/sp-fm/fuse-utils"
description = "Top-level package for Fusemachines Utilities."
authors = ["Shashanka Prajapati <shashanka@fusemachines.com>"]
readme = "README.rst"
license =  "MIT license"
keywords = []
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]
packages = [
    { include = "fuse_utils" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.7"
fire = "*"
loguru = "*"
dynaconf = "*"

[tool.poetry.dev-dependencies]
pytest = "*"
coverage = "*"
tox = "*"
flake8 = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
toml = "*"
pre-commit = "*"

[tool.poetry.scripts]
fuse = "fuse_utils.cli:main"

[tool.pytest.ini_options]
testpaths = "tests"

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]
ignore_errors = true

[flake8]
max-line-length = 88
max-complexity = 10
per-file-ignores = """
    # imported but unused
    __init__.py: F401
"""

[mypy]
ignore_missing_imports = "True"
check_untyped_defs = "True"
warn_redundant_casts = "True"
warn_unreachable = "True"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
